name: Deploy app
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build App
    runs-on: [ubuntu-latest]
    steps:
      - name: Import commit files
        uses: actions/checkout@master
      - name: Get yarn cache # https://github.com/actions/cache/blob/master/examples.md#node---yarn
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload bundle
        uses: actions/upload-artifact@master
        with:
          name: my_artifact_name # Upload artifact with name `dist`
          path: dist # Upload content of `dist` folder
      - name: Debug Files
        run: ls
  deploy:
    name: Deploy App
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: my_artifact_name # Download artifact named `my_artifact_name` (matches build step: Upload bundle)
          path: dist # Optional, downloads to current working directory under folder {artifact_name} if not specified
      - name: Debug Files
        run: ls
      - name: Upload to FTP
        uses: isthatcentered/dist-to-ftp@master
        with:
          user: u76543727-vt # Ftp user Ex:
          password: ${{ secrets.SFTP_PASSWORD }} # Ftp password Ex:
          host: ftp://home538900693.1and1-data.host # Ftp host Ex:
          port: 21 # (optional) FTP port, defaults to 21
          path: dist # Folder to deploy Ex: apps/frontend/dist or dist
          into: ftptest # Where to place the files in your ftp
          cleanupExisting: true # (Optional), Remove already existing files inside FTP destination folder (`into` parameter)


#on: push
#name: Publish Website over SFTP
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [10.x]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - run: npm install
#      - run: npm run build
#        env:
#          REPO: git@github.com:thomas-db/Sophrologie-Bordeaux.git
#          BRANCH: master
#          FOLDER: dist
#
#  FTP-Deploy-Action:
#    name: FTP-Deploy-Action
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#      - uses: actions/checkout@v2.1.0
#        with:
#          fetch-depth: 2
#
#      - name: FTP-Deploy-Action
#        uses: SamKirkland/FTP-Deploy-Action@3.1.1
#        with:
#          local-dir: ./dist
#          ftp-server: ftp://home538900693.1and1-data.host/ftptest
#          ftp-username: u76543727-vt
#          ftp-password: ${{ secrets.SFTP_PASSWORD }}

